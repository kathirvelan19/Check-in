1️⃣ Project Name

Class Attendance — Fast App

Type: Frontend-only, offline-capable attendance tracking system

2️⃣ Project Purpose

The app is designed for teachers/staff to:

Record daily attendance for students.

Save rosters (student lists) once and reuse them daily.

Mark absent (AB), on-duty (OD), or present (P) automatically.

Export attendance reports as Excel files for record-keeping.

Operate entirely offline without a backend server.

Why it’s needed:

Schools often rely on manual attendance, which is slow.

Offline digital solutions avoid network dependency.

Excel reports allow easy record-sharing with administration.

3️⃣ Core Features
3.1 Staff Account

Each staff member can create a local account using a code and password.

Accounts are stored in localStorage, making them persistent across sessions.

Staff code ensures data is isolated per teacher.

Flow:

Staff enters code & password.

If the code exists → login; else → sign up.

On successful login → app unlocks the attendance interface.

3.2 Roster Management

Staff can paste a roster (student list) or import CSV.

Each student has:

RegNo (unique ID)

Name

The roster is saved locally per staff and can be reused daily.

Staff can export the roster for backup or sharing.

Sample Data:

101,Arun
102,Ganesh
103,Priya
104,Meena
105,Rahul

3.3 Daily Attendance

Staff selects the date for attendance.

Enter Absent students (AB) and On-Duty students (OD).

Remaining students are automatically marked Present (P).

Storage:

Attendance is stored per staff and per date in localStorage.

Example for one date:

{
  "date": "2025-09-02",
  "records": { "101": "P", "102": "AB", "103": "OD" }
}


Features:

View saved attendance for any date.

Visual representation with colored cells (P = green, AB = red, OD = blue).

3.4 Reports & Excel Export

Staff can select a date range and export all attendance data.

Excel file contains:

One sheet named "Attendance"

Columns: RegNo, Name, and one column per date

Rows: Students with status per date

Colored cells for P/AB/OD

Library used: ExcelJS

3.5 Offline Functionality

No backend required

All data is stored in the browser:

localStorage (simple)

Optionally IndexedDB (advanced)

Works without internet after first load.

4️⃣ Data Flow / Storage

Sign Up / Login

User → Enter Code & Password → Check localStorage → Authenticate → Unlock App


Roster Management

Paste CSV / Input → Parse → Save in localStorage → Display in Table


Mark Attendance

Select Date → Enter AB/OD → Auto-mark P → Save → localStorage


View Attendance

Select Date → Load from localStorage → Display Table


Export Excel

Select Date Range → Load Attendance Data → Generate Excel → Download

5️⃣ Advantages

Works fully offline → no internet or backend needed

Multi-day attendance tracking per staff

Excel export → easy reporting & printing

Persistent accounts & data per staff code

Lightweight & fast

6️⃣ Optional Enhancements (Master Level)

IndexedDB for large data storage

CSV import for bulk rosters

Password hashing for security

Search/filter students in roster

Responsive UI for mobile use

Dark mode / theme customization

Automatic attendance reminders

7️⃣ Tech Stack

HTML, CSS, JavaScript

Browser localStorage / IndexedDB

ExcelJS for Excel export

8️⃣ Conclusion

Your project is essentially a frontend-only school attendance management system with:

Local authentication per staff

Daily attendance marking

Persistent storage per staff

Excel export for reporting

It is fully offline, safe for personal or small-scale school use, and can be extended with advanced JS features for a “master-level” solution.